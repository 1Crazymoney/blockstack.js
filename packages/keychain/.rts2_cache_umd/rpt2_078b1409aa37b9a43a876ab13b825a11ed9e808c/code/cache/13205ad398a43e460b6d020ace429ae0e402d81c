{"code":"import { ChainID, getAddressFromPrivateKey, TransactionVersion, } from '@blockstack/stacks-transactions';\r\nimport { ECPair } from 'bitcoinjs-lib';\r\nimport { ecPairToHexString } from 'blockstack';\r\nconst networkDerivationPath = `m/44'/5757'/0'/0/0`;\r\nexport const derivationPaths = {\r\n    [ChainID.Mainnet]: networkDerivationPath,\r\n    [ChainID.Testnet]: networkDerivationPath,\r\n};\r\nexport function getDerivationPath(chain) {\r\n    return derivationPaths[chain];\r\n}\r\nexport function deriveStxAddressChain(chain) {\r\n    return (rootNode) => {\r\n        const childKey = rootNode.derivePath(getDerivationPath(chain));\r\n        if (!childKey.privateKey) {\r\n            throw new Error('Unable to derive private key from `rootNode`, bip32 master keychain');\r\n        }\r\n        const ecPair = ECPair.fromPrivateKey(childKey.privateKey);\r\n        const privateKey = ecPairToHexString(ecPair);\r\n        const txVersion = chain === ChainID.Mainnet ? TransactionVersion.Mainnet : TransactionVersion.Testnet;\r\n        return {\r\n            childKey,\r\n            address: getAddressFromPrivateKey(privateKey, txVersion),\r\n            privateKey,\r\n        };\r\n    };\r\n}\r\n//# sourceMappingURL=index.js.map","references":["/Users/Yukan/Desktop/work/blockstack/stacks.js/node_modules/@blockstack/stacks-transactions/lib/index.d.ts","/Users/Yukan/Desktop/work/blockstack/stacks.js/packages/keychain/node_modules/bitcoinjs-lib/types/index.d.ts","/Users/Yukan/Desktop/work/blockstack/stacks.js/node_modules/blockstack/lib/index.d.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/address-derivation/index.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EACL,OAAO,EACP,wBAAwB,EACxB,kBAAkB,GACnB,MAAM,iCAAiC,CAAC;AACzC,OAAO,EAAkB,MAAM,EAAE,MAAM,eAAe,CAAC;AACvD,OAAO,EAAE,iBAAiB,EAAE,MAAM,YAAY,CAAC;AAE/C,MAAM,qBAAqB,GAAG,oBAAoB,CAAC;AAEnD,MAAM,CAAC,MAAM,eAAe,GAAG;IAC7B,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,qBAAqB;IACxC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,qBAAqB;CACzC,CAAC;AAEF,MAAM,UAAU,iBAAiB,CAAC,KAAc;IAC9C,OAAO,eAAe,CAAC,KAAK,CAAC,CAAC;AAChC,CAAC;AAED,MAAM,UAAU,qBAAqB,CAAC,KAAc;IAClD,OAAO,CAAC,QAAwB,EAAE,EAAE;QAClC,MAAM,QAAQ,GAAG,QAAQ,CAAC,UAAU,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE;YACxB,MAAM,IAAI,KAAK,CAAC,qEAAqE,CAAC,CAAC;SACxF;QACD,MAAM,MAAM,GAAG,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAC1D,MAAM,UAAU,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAC7C,MAAM,SAAS,GACb,KAAK,KAAK,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC,kBAAkB,CAAC,OAAO,CAAC;QACtF,OAAO;YACL,QAAQ;YACR,OAAO,EAAE,wBAAwB,CAAC,UAAU,EAAE,SAAS,CAAC;YACxD,UAAU;SACX,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC\"}","dts":{"name":"/Users/Yukan/Desktop/work/blockstack/stacks.js/packages/keychain/address-derivation/index.d.ts","writeByteOrderMark":false,"text":"import { ChainID } from '@blockstack/stacks-transactions';\r\nimport { BIP32Interface } from 'bitcoinjs-lib';\r\nexport declare const derivationPaths: {\r\n    1: string;\r\n    2147483648: string;\r\n};\r\nexport declare function getDerivationPath(chain: ChainID): string;\r\nexport declare function deriveStxAddressChain(chain: ChainID): (rootNode: BIP32Interface) => {\r\n    childKey: BIP32Interface;\r\n    address: string;\r\n    privateKey: string;\r\n};\r\n"}}
