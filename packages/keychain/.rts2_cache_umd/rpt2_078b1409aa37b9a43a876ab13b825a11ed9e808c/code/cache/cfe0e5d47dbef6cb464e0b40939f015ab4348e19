{"code":"import { getLegacyAppNode } from 'blockstack/lib/wallet';\r\nimport { publicKeyToAddress } from 'blockstack/lib/keys';\r\nimport { getAddress } from '../utils';\r\nconst APPS_NODE_INDEX = 0;\r\nconst SIGNING_NODE_INDEX = 1;\r\nconst ENCRYPTION_NODE_INDEX = 2;\r\nconst STX_NODE_INDEX = 6;\r\nexport default class IdentityAddressOwnerNode {\r\n    constructor(ownerHdNode, salt) {\r\n        this.hdNode = ownerHdNode;\r\n        this.salt = salt;\r\n    }\r\n    getNode() {\r\n        return this.hdNode;\r\n    }\r\n    getSalt() {\r\n        return this.salt;\r\n    }\r\n    getIdentityKey() {\r\n        if (!this.hdNode.privateKey) {\r\n            throw new Error('Node does not have private key');\r\n        }\r\n        return this.hdNode.privateKey.toString('hex');\r\n    }\r\n    getIdentityKeyID() {\r\n        return this.hdNode.publicKey.toString('hex');\r\n    }\r\n    getAppsNode() {\r\n        return this.hdNode.deriveHardened(APPS_NODE_INDEX);\r\n    }\r\n    getAddress() {\r\n        return getAddress(this.hdNode);\r\n    }\r\n    getEncryptionNode() {\r\n        return this.hdNode.deriveHardened(ENCRYPTION_NODE_INDEX);\r\n    }\r\n    getSigningNode() {\r\n        return this.hdNode.deriveHardened(SIGNING_NODE_INDEX);\r\n    }\r\n    getSTXNode() {\r\n        return this.hdNode.deriveHardened(STX_NODE_INDEX);\r\n    }\r\n    getAppNode(appDomain) {\r\n        return getLegacyAppNode(this.hdNode, this.salt, appDomain);\r\n    }\r\n    getAppPrivateKey(appDomain) {\r\n        const appNode = this.getAppNode(appDomain);\r\n        if (!appNode.privateKey) {\r\n            throw new Error('App node does not have private key');\r\n        }\r\n        return appNode.privateKey.toString('hex');\r\n    }\r\n    getAppAddress(appDomain) {\r\n        const appNode = this.getAppNode(appDomain);\r\n        return publicKeyToAddress(appNode.publicKey);\r\n    }\r\n}\r\n//# sourceMappingURL=identity-address-owner-node.js.map","references":["/Users/Yukan/Desktop/work/blockstack/stacks.js/packages/keychain/node_modules/bitcoinjs-lib/types/index.d.ts","/Users/Yukan/Desktop/work/blockstack/stacks.js/node_modules/blockstack/lib/wallet.d.ts","/Users/Yukan/Desktop/work/blockstack/stacks.js/node_modules/blockstack/lib/keys.d.ts","/Users/Yukan/Desktop/work/blockstack/stacks.js/packages/keychain/src/utils/index.ts"],"map":"{\"version\":3,\"file\":\"identity-address-owner-node.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/nodes/identity-address-owner-node.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAC;AACzD,OAAO,EAAE,kBAAkB,EAAE,MAAM,qBAAqB,CAAC;AACzD,OAAO,EAAE,UAAU,EAAE,MAAM,UAAU,CAAC;AAEtC,MAAM,eAAe,GAAG,CAAC,CAAC;AAC1B,MAAM,kBAAkB,GAAG,CAAC,CAAC;AAC7B,MAAM,qBAAqB,GAAG,CAAC,CAAC;AAChC,MAAM,cAAc,GAAG,CAAC,CAAC;AAEzB,MAAM,CAAC,OAAO,OAAO,wBAAwB;IAK3C,YAAY,WAA2B,EAAE,IAAY;QACnD,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;YAC3B,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;SACnD;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAChD,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;IACrD,CAAC;IAED,UAAU;QACR,OAAO,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;IAED,iBAAiB;QACf,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,qBAAqB,CAAC,CAAC;IAC3D,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;IACxD,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;IACpD,CAAC;IAED,UAAU,CAAC,SAAiB;QAC1B,OAAO,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC7D,CAAC;IAED,gBAAgB,CAAC,SAAiB;QAChC,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAC3C,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;YACvB,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;SACvD;QACD,OAAO,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC;IAED,aAAa,CAAC,SAAiB;QAC7B,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAC3C,OAAO,kBAAkB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC/C,CAAC;CACF\"}","dts":{"name":"/Users/Yukan/Desktop/work/blockstack/stacks.js/packages/keychain/nodes/identity-address-owner-node.d.ts","writeByteOrderMark":false,"text":"import { BIP32Interface } from 'bitcoinjs-lib';\r\nexport default class IdentityAddressOwnerNode {\r\n    hdNode: BIP32Interface;\r\n    salt: string;\r\n    constructor(ownerHdNode: BIP32Interface, salt: string);\r\n    getNode(): BIP32Interface;\r\n    getSalt(): string;\r\n    getIdentityKey(): string;\r\n    getIdentityKeyID(): string;\r\n    getAppsNode(): BIP32Interface;\r\n    getAddress(): string;\r\n    getEncryptionNode(): BIP32Interface;\r\n    getSigningNode(): BIP32Interface;\r\n    getSTXNode(): BIP32Interface;\r\n    getAppNode(appDomain: string): BIP32Interface;\r\n    getAppPrivateKey(appDomain: string): string;\r\n    getAppAddress(appDomain: string): string;\r\n}\r\n"}}
